events {
    worker_connections 1024;
}

http {
    # Rate limiting zones para protección contra ataques (ajustado para desarrollo)
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=120r/m;
    limit_req_zone $binary_remote_addr zone=frontend_limit:10m rate=300r/m;
    
    # Logging de seguridad
    log_format security_log '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           '$request_time $upstream_response_time';
    
    # Ocultar versión de nginx
    server_tokens off;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Configuración de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Configuración general
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Configuración de compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json;

    # Upstream para el backend
    upstream backend {
        server backend:8000;
    }

    # Upstream para el frontend
    upstream frontend {
        server frontend:3000;
    }

    # Upstream para RabbitMQ Management
    upstream rabbitmq_management {
        server rabbitmq:15672;
    }

    # Upstream para Meilisearch
    upstream meilisearch_dashboard {
        server meilisearch:7700;
    }

    # Upstream para Redis (solo para desarrollo)
    upstream redis_dev {
        server redis:6379;
    }

    # Servidor principal - Frontend y API
    server {
        listen 80;
        server_name localhost;

        # Configuración de seguridad avanzada
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Content Security Policy (CSP) - Protección contra XSS
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';" always;
        
        # Strict Transport Security (HSTS) - Solo para HTTPS en producción
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Prevenir ataques de clickjacking adicionales
        add_header X-Permitted-Cross-Domain-Policies "none" always;
        
        # Prevenir información del servidor
        add_header X-Powered-By "" always;
        server_tokens off;

        # Proxy para API del backend con rate limiting
        location /api/ {
            # Rate limiting para API general (deshabilitado en desarrollo)
            # limit_req zone=api_limit burst=10 nodelay;
            
            # Logging de seguridad para API
            access_log /var/log/nginx/api_access.log security_log;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configuración para WebSockets si es necesario
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Rate limiting estricto para login
        location /api/v1/auth/login {
            # Rate limiting muy estricto para login (deshabilitado en desarrollo)
            # limit_req zone=login_limit burst=3 nodelay;
            
            # Logging especial para intentos de login
            access_log /var/log/nginx/login_attempts.log security_log;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Proxy para documentación de la API
        location /docs {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy para OpenAPI JSON
        location /openapi.json {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket para Vite HMR (Hot Module Replacement)
        location /ws {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Soporte específico para Vite client
        location /@vite/client {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Recursos de Vite (desarrollo)
        location ~ ^/(node_modules|src|@vite|@react-refresh)/ {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configuración para desarrollo con hot reload
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Archivos estáticos del frontend
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Servir el frontend para todas las demás rutas con rate limiting
        location / {
            # Rate limiting para frontend
            limit_req zone=frontend_limit burst=20 nodelay;
            
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configuración para desarrollo con hot reload
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # Servidor para acceso directo al backend (desarrollo)
    server {
        listen 8080;
        server_name localhost;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Servidor para RabbitMQ Management UI
    server {
        listen 15672;
        server_name localhost;

        location / {
            proxy_pass http://rabbitmq_management;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configuración específica para RabbitMQ Management
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # Servidor para Meilisearch Dashboard
    server {
        listen 7700;
        server_name localhost;

        location / {
            proxy_pass http://meilisearch_dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Servidor para Redis (solo desarrollo - para herramientas como RedisInsight)
    server {
        listen 6379;
        server_name localhost;

        # Proxy TCP para Redis
        location / {
            proxy_pass http://redis_dev;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Servidor para HMR de Vite (desarrollo)
    server {
        listen 3001;
        server_name localhost;

        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
